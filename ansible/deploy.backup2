---
- name: Deploy todo-app on webserver
  hosts: webserver
  become: yes
  vars:
    docker_gpg_path: /etc/apt/keyrings/docker.gpg
    docker_repo_url: "https://download.docker.com/linux/ubuntu"
    docker_repo_release: "{{ ansible_distribution_release }}"
    docker_repo_arch: "amd64"
    docker_package_version: "5:24.0.7-1~ubuntu.20.04~focal"  # Optionnel, peut être laissé vide
    docker_compose_version: "v2.24.6"

  tasks:

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      get_url:
        url: "{{ docker_repo_url }}/gpg"
        dest: "{{ docker_gpg_path }}"
        mode: '0644'

    - name: Add Docker APT repository
      apt_repository:
        repo: "deb [arch={{ docker_repo_arch }} signed-by={{ docker_gpg_path }}] {{ docker_repo_url }} {{ docker_repo_release }} stable"
        state: present
        filename: docker

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Ensure Docker service is running
      service:
        name: docker
        state: started
        enabled: yes

    - name: Pull todo-app image
      community.docker.docker_image:
        name: ghcr.io/todo-app-example/todo-app
        source: pull

    - name: Run todo-app container
      community.docker.docker_container:
        name: todo-app
        image: ghcr.io/todo-app-example/todo-app
        state: started
        restart_policy: always
        published_ports:
          - "80:3000"

